name: github-actions.yml # ワークフローの名前を定義

on:
  push: # GitHubにpushされた時にワークフローを起動する

jobs:
  test:
    runs-on: ubuntu-latest # 実行環境

    defaults:
      run:
        working-directory: . # 作業ディレクトリを指定

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: myapp_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes:
          - postgresql_data:/var/lib/postgresql/data

    steps: # GitHubのリポジトリからコードを取得する。CI環境の初期値はコードが空の状態。
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
          install-chromedriver: true

      - name: Set up Ruby # Rubyのセットアップ
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.3 # 使用するRubyのバージョンを指定
          bundler-cache: true # Bundlerのキャッシュを有効にする　。前回のキャッシュを再利用することで時間を短縮できる。

      - name: Cache node modules # Nodeモジュールをキャッシュ
        uses: actions/cache@v4
        with:
          path: node_modules # キャッシュするディレクトリを指定
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }} # キャッシュのキーを指定
          restore-keys: |
            ${{ runner.os }}-node-  # 部分一致する最新のキャッシュを探します。

      - name: Install dependencies # Bundlerとgemとyarnのインストール
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          yarn install --frozen-lockfile

      - name: assets precompile # TailwindCSSとdaisyUIを含めたCSSの準備
        run: bundle exec rake assets:precompile RAILS_ENV=test

      - name: Database create and migrate # データベースの作成とマイグレーションを実行
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:drop db:create db:migrate RAILS_ENV=test

      - name: Run rspec # RSpecを実行
        run: bundle exec rspec
